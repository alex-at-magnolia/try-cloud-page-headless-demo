{"version":3,"sources":["pages/Basic.js","pages/Contact.js","components/Headline.js","components/Image.js","components/Paragraph.js","magnolia.config.js","components/Expander.js","components/List.js","components/Item.js","helpers/AppHelpers.js","helpers/PageLoader.js","components/Navigation.js","App.js","index.js"],"names":["Basic","props","main","extras","title","className","metadata","content","Contact","style","background","padding","Headline","text","Image","src","process","image","alt","Paragraph","dangerouslySetInnerHTML","__html","richText","config","state","isCollapsed","toggle","bind","event","this","setState","preventDefault","EditorContextHelper","refresh","expanderItems","onClick","focusable","viewBox","aria-hidden","role","d","parentTemplateId","React","Component","items","getAPIBase","Boolean","REACT_APP_MGNL_BASE_PUBLIC","getLanguages","split","removeCurrentLanguage","string","currentLanguage","replace","RegExp","getCurrentLanguage","languages","i","length","language","test","window","location","pathname","getRouterBasename","indexOf","nodeName","getVersion","path","URLSearchParams","get","PageLoader","getPagePath","loadPage","force","a","apiBase","pagePath","console","log","version","href","fullContentPath","fetch","pageResponse","json","pageJson","templateId","templateJson","inEditor","templateResponse","init","templateDefinitions","inPreview","addEventListener","data","JSON","parse","action","e","error","renderLanguages","map","lang","key","data-active","newLanguage","origin","search","changeLanguage","Navigation","useState","navItems","setNavItems","useEffect","url","response","fetchNav","item","activeClassName","to","navigationTitle","App","basename","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bc0831f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { EditableArea } from '@magnolia/react-editor';\r\n\r\nconst Basic = props => {\r\n  const { main, extras, title } = props;\r\n\r\n  return (\r\n    <div className=\"Basic\">\r\n      <div className=\"hint\">[Basic Page]</div>\r\n      <h1>{title || props.metadata['@name']}</h1>\r\n\r\n      <main>\r\n        <div className=\"hint\">[Main Area]</div>         \r\n        {main && <EditableArea className=\"Area\" content={main} />}  \r\n      </main>\r\n\r\n      <div className=\"Extras\" >\r\n        <div className=\"hint\">[Sercondary Area]</div>\r\n        {extras && <EditableArea className=\"Area\" content={extras} />}  \r\n        {/* <button>Contact</button> */}\r\n      </div>    \r\n    </div>\r\n  ) \r\n};\r\n\r\nexport default Basic;\r\n","import React from 'react';\r\nimport { EditableArea } from '@magnolia/react-editor';\r\n\r\nconst Contact = props => {\r\n  const { main, title } = props;\r\n  const boxStyle = {\r\n    background: '#eaf7f5',\r\n    padding: '20px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Contact\">\r\n      <h2  className=\"hint\">[Contact Page]</h2>\r\n      <div className=\"box\" style={boxStyle}>\r\n        <h1>{title || 'Nulla vitae elit libero, a pharetra augue.'}</h1>\r\n      </div>\r\n      {main && <EditableArea content={main} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Headline = props => \r\n\r\n<h2 className=\"Headline\">{props.text}</h2>;\r\n\r\nexport default Headline;\r\n","import React from 'react';\r\n\r\nconst Image = props => \r\n    \r\n<img className=\"Image\" src={process.env.REACT_APP_MGNL_DAM_RAW + props.image['@link']} alt=\"Etiam Purus\" />\r\n\r\n\r\nexport default Image;\r\n","import React from 'react';\r\n\r\nconst Paragraph = props => <p className=\"Paragraph\" dangerouslySetInnerHTML={{ __html: props.richText }} />;\r\n\r\nexport default Paragraph;\r\n","import Basic from './pages/Basic';\r\nimport Contact from './pages/Contact';\r\nimport Headline from './components/Headline';\r\nimport Image from './components/Image';\r\nimport Paragraph from './components/Paragraph';\r\nimport Expander from './components/Expander';\r\nimport List from './components/List';\r\nimport Item from './components/Item';\r\n\r\nconst config = {\r\n    'componentMappings':{\r\n        'react-minimal-lm:pages/basic': Basic,\r\n        'react-minimal-lm:pages/contact': Contact,\r\n    \r\n        'spa-lm:components/headline': Headline,\r\n        'spa-lm:components/image': Image,\r\n        'spa-lm:components/paragraph': Paragraph,\r\n        'spa-lm:components/expander': Expander,\r\n        'spa-lm:components/list': List,\r\n        'spa-lm:components/listItem': Item\r\n    }\r\n};\r\n\r\nexport default config;\r\n","import React from 'react';\r\nimport { EditableArea, EditorContextHelper } from '@magnolia/react-editor';\r\n\r\nclass Expander extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isCollapsed: true};\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  state = {};\r\n \r\n  toggle(event) {\r\n    this.setState({\r\n      isCollapsed: !this.state.isCollapsed\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    EditorContextHelper.refresh();\r\n    // if (window.parent.mgnlRefresh !== undefined){\r\n    //   EditorContextHelper.refresh();\r\n    // }\r\n  }\r\n\r\n  render () {\r\n    const expanderItems = this.props.expanderItems;\r\n    return (\r\n      <div className=\"expander\">\r\n        <div onClick={this.toggle} className={this.state.isCollapsed ? 'open expanderHeader' : 'closed expanderHeader'}>\r\n          Expander\r\n          <svg className=\"expanderIcon\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path></svg>\r\n        </div>\r\n        \r\n        {!this.state.isCollapsed &&\r\n          <div>\r\n            <div className=\"hint\">[EXPANDER OPENED]</div>\r\n            {expanderItems && <EditableArea content={expanderItems}  parentTemplateId={this.props.metadata['mgnl:template']}/>}\r\n          </div>\r\n        }   \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n};\r\n\r\nexport default Expander;\r\n","import React from 'react';\r\nimport { EditableArea } from '@magnolia/react-editor';\r\n\r\nconst List = props => {\r\n\r\n  const { items} = props;\r\n\r\n  return (\r\n    <>\r\n    <div className=\"hint\">[LIST]</div>\r\n    <ul className=\"List\">\r\n      {items && <EditableArea content={items} parentTemplateId={props.metadata['mgnl:template']}/>}\r\n    </ul>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst Item = props => <li className=\"Item\">{props.text}</li>;\r\n\r\nexport default Item;\r\n","export function getAPIBase() {\r\n  let M;\r\n  if (Boolean(process.env.REACT_APP_MGNL_IS_PREVIEW)) {\r\n    M = process.env.REACT_APP_MGNL_BASE_AUTHOR;\r\n  } else {\r\n    M = process.env.REACT_APP_MGNL_BASE_PUBLIC;\r\n  }\r\n  let API_BASE = process.env.REACT_APP_MGNL_HOST + M;\r\n  return API_BASE;\r\n}\r\n\r\nexport function getLanguages() {\r\n  return process.env.REACT_APP_MGNL_LANGUAGES.split(' ');\r\n}\r\n\r\nexport function removeCurrentLanguage(string, currentLanguage) {\r\n  return string.replace(new RegExp('/' + currentLanguage + '($|/)'), '/');\r\n}\r\n\r\nexport function getCurrentLanguage() {\r\n  const languages = getLanguages();\r\n\r\n  for (let i = 0; i < languages.length; i++) {\r\n    const language = languages[i];\r\n\r\n    if (new RegExp('/' + language + '($|/)').test(window.location.pathname)) {\r\n      return language;\r\n    }\r\n  }\r\n\r\n  return languages[0];\r\n}\r\n\r\nexport function changeLanguage(newLanguage) {\r\n  const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\r\n  const languages = getLanguages();\r\n  let pathname = window.location.pathname;\r\n  const currentLanguage = getCurrentLanguage();\r\n  pathname = removeCurrentLanguage(pathname, currentLanguage);\r\n\r\n  if (languages[0] !== newLanguage) {\r\n    if (pathname.indexOf(nodeName) > -1) {\r\n      pathname = pathname.replace(new RegExp(nodeName), '/' + newLanguage + nodeName);\r\n    } else {\r\n      pathname = '/' + newLanguage + pathname;\r\n    }\r\n  }\r\n\r\n  window.location.href = window.location.origin + pathname + window.location.search;\r\n}\r\n\r\nexport function getRouterBasename() {\r\n  const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\r\n  const languages = getLanguages();\r\n  var pathname = window.location.pathname;\r\n\r\n  if (pathname.indexOf(nodeName) > -1) {\r\n    return pathname.replace(new RegExp(nodeName + '.*'), '') + nodeName;\r\n  }\r\n\r\n  const currentLanguage = getCurrentLanguage();\r\n\r\n  return languages[0] === currentLanguage ? '/' : '/' + currentLanguage;\r\n}\r\n\r\nexport function getVersion(path) {\r\n  return new URLSearchParams(path).get('mgnlVersion');\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport config from '../magnolia.config';\r\nimport { getAPIBase, getLanguages, removeCurrentLanguage, getCurrentLanguage, getVersion } from './AppHelpers';\r\n\r\nimport { EditablePage } from '@magnolia/react-editor';\r\nimport { EditorContextHelper } from '@magnolia/react-editor';\r\n\r\nclass PageLoader extends React.Component {\r\n  state = {};\r\n\r\n  getPagePath = () => {\r\n    const languages = getLanguages();\r\n    const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\r\n    const currentLanguage = getCurrentLanguage();\r\n    let path = nodeName + window.location.pathname.replace(new RegExp('(.*' + nodeName + '|.html)', 'g'), '');\r\n\r\n    if (currentLanguage !== languages[0]) {\r\n      path = removeCurrentLanguage(path, currentLanguage);\r\n      path += '?lang=' + currentLanguage;\r\n    }\r\n\r\n    return path;\r\n  };\r\n\r\n  loadPage = async (force) => {\r\n    // Bail out if already loaded content.\r\n    if (!force && this.state.pathname === window.location.pathname) return;\r\n\r\n    const apiBase = getAPIBase();\r\n\r\n    const pagePath = this.getPagePath();\r\n    console.log('pagePath:' + pagePath);\r\n\r\n    const version = getVersion(window.location.href);\r\n    let fullContentPath = `${apiBase}${version ? process.env.REACT_APP_MGNL_API_PAGES_PREVIEW : process.env.REACT_APP_MGNL_API_PAGES}${pagePath}${version ? `?version=${version}` : ''}`;\r\n\r\n    const pageResponse = await fetch(fullContentPath);\r\n\r\n    const pageJson = await pageResponse.json();\r\n    console.log('page content: ', pageJson);\r\n\r\n    const templateId = pageJson['mgnl:template'];\r\n    console.log('templateId:', templateId);\r\n\r\n    let templateJson = null;\r\n    if (EditorContextHelper.inEditor()) {\r\n      const templateResponse = await fetch(apiBase + process.env.REACT_APP_MGNL_API_TEMPLATES + '/' + templateId);\r\n      templateJson = await templateResponse.json();\r\n      console.log('definition:', templateJson);\r\n    }\r\n\r\n    this.setState({\r\n      init: true,\r\n      content: pageJson,\r\n      templateDefinitions: templateJson,\r\n      pathname: window.location.pathname,\r\n    });\r\n  };\r\n\r\n  inEditorPreview() {\r\n    const url = window.location.href;\r\n    const inPreview = url.indexOf('mgnlPreview=true') > 0;\r\n    console.log('inEditorPreview:' + inPreview);\r\n    return EditorContextHelper.inEditor() && inPreview;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const handler = event => {\r\n      try {\r\n        if (typeof event.data !== \"string\") {\r\n          return;\r\n        }\r\n        const message = JSON.parse(event.data);\r\n        if (message.action === 'refresh') {\r\n          this.loadPage(true);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Failed to parse \" + event.data)\r\n      }\r\n    };\r\n\r\n    window.addEventListener('message', handler);\r\n\r\n    this.loadPage(false);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.loadPage();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.init) {\r\n      console.log('config:', config);\r\n      //const isDevMode = process.env.NODE_ENV === 'development';\r\n      //console.log(\"n:\" + process.env.NODE_ENV)\r\n\r\n      return (\r\n        <EditablePage\r\n          templateDefinitions={this.state.templateDefinitions || {}}\r\n          content={this.state.content}\r\n          config={config}\r\n        ></EditablePage>\r\n      );\r\n    } else {\r\n      return <p>NO PAGE.</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getAPIBase, getLanguages, getCurrentLanguage, changeLanguage } from '../helpers/AppHelpers';\r\n\r\nfunction renderLanguages() {\r\n  const currentLanguage = getCurrentLanguage();\r\n\r\n  return (\r\n    <div className=\"languages\">\r\n      {getLanguages().map((lang) => (\r\n        <span key={`lang-${lang}`} data-active={currentLanguage === lang} onClick={() => changeLanguage(lang)}>\r\n          {lang}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Navigation() {\r\n  const [navItems, setNavItems] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    async function fetchNav() {\r\n      const apiBase = getAPIBase();\r\n\r\n      const url = apiBase + process.env.REACT_APP_MGNL_API_NAV + process.env.REACT_APP_MGNL_APP_BASE;\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      let items = data['@nodes'].map((nodeName) => {\r\n        return data[nodeName];\r\n      });\r\n      setNavItems([data, ...items]);\r\n    }\r\n\r\n    if (navItems.length < 1) {\r\n      fetchNav();\r\n    }\r\n  }, [navItems]);\r\n\r\n  return navItems ? (\r\n    <nav className=\"Navigation\">\r\n      {navItems.map((item) => {\r\n        return (\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            key={item['@id']}\r\n            to={item['@path'].replace(process.env.REACT_APP_MGNL_APP_BASE, '')}\r\n          >\r\n            {item.navigationTitle || item.title || item['@name']}\r\n          </NavLink>\r\n        );\r\n      })}\r\n      {renderLanguages()}\r\n    </nav>\r\n  ) : (\r\n    <div />\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport PageLoader from './helpers/PageLoader';\r\nimport Navigation from './components/Navigation';\r\nimport './App.css';\r\nimport { getRouterBasename } from './helpers/AppHelpers';\r\n\r\nfunction App(props) {\r\n\r\n    return (\r\n    <BrowserRouter basename={getRouterBasename()}>\r\n      <header>\r\n        <Navigation />\r\n      </header>\r\n\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/\" component={PageLoader} />\r\n        </Switch>\r\n      </div>\r\n\r\n      <footer>\r\n        Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\r\n        <br />\r\n        Copyright © 2020\r\n      </footer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}